# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.
#
# Sway is a work in progress. Some of these defaults are currently unimplemented.


### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
set $alt Mod1
# Your preferred terminal emulator
set $term ~/bin/terminal
# Your preferred application launcher
set $menu dmenu_run

### Outputs
# output DP-1 res 1920 1080 pos 0 0
# output DP-2 res 1920 1080 pos 0 1080
# output DVI-D-1 res 1920 1080 pos 1920 0
# output DVI-I-1 res 1920 1080 pos 1920 1080

output DP-1 pos 0 0
output DP-2 pos 0 1080
output DVI-I-1 pos 2560 0
output HDMI-A-1 pos 2560 1080

# laptop config #1:
# output DP-2 res 2560 1080 pos 0 0
# output eDP-1 disable
# #output eDP-1 res 1920 1080 pos 2560 0
# output HDMI-A-1 pos 0 1080

# laptop config #2:
output DP-2 res 2560 1080 pos 0 0
output eDP-1 scale 2
output HDMI-A-1 pos 0 1080

output eDP-1 bg ~/Bilder/wallpapers/1 fill

output DP-1 bg ~/Bilder/wallpapers/1 fill
output DP-2 bg ~/Bilder/wallpapers/2 fill
output HDMI-A-1 bg ~/Bilder/wallpapers/3 fill
output DVI-I-1 bg ~/Bilder/wallpapers/4 fill

### Misc config
gaps inner 15
#gaps outer 0
smart_gaps on

default_border pixel 1
hide_edge_borders smart

### Key bindings
#
# Basics:
#
    # start a terminal
    bindsym $mod+Return exec $term

    # kill focused window
    bindsym $mod+Shift+q kill
    bindsym $mod+c kill

    # start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # reload the configuration file
    bindsym $mod+Shift+c reload

    # restart sway inplace (preserves your layout/session, can be used to upgrade sway)
    bindsym $mod+Shift+r restart

    # exit sway (logs you out of your wayland session)
    bindsym $mod+Shift+e exit
#
# Moving around:
#
    # Move your focus around with $mod+[h|j|k|l], like vim
    bindsym $mod+h focus left
    bindsym $mod+j focus down
    bindsym $mod+k focus up
    bindsym $mod+l focus right

    # cursor keys changes workspace (on same output, like in awesome):
    bindsym $mod+Left  workspace prev_on_output
    bindsym $mod+Right workspace next_on_output

    # or use $mod+[up|down|left|right]
    # bindsym $mod+Left focus left
    # bindsym $mod+Down focus down
    # bindsym $mod+Up focus up
    # bindsym $mod+Right focus right

    # _move_ the focused window with the same, but add Shift
    bindsym $mod+Shift+h move left
    bindsym $mod+Shift+j move down
    bindsym $mod+Shift+k move up
    bindsym $mod+Shift+l move right
    # ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

#
# Moving between outputs:
#
    # control key is output modifier ($mod=Mod4)
    set $output-mod Mod4+control

    # vim keys changes output
    bindsym $output-mod+h focus output left, exec ~/bin/sway-ws.rb
    bindsym $output-mod+j focus output down, exec ~/bin/sway-ws.rb
    bindsym $output-mod+k focus output up, exec ~/bin/sway-ws.rb
    bindsym $output-mod+l focus output right, exec ~/bin/sway-ws.rb

    # $output-mod+shift moves focused window to other outputs
    bindsym $output-mod+Shift+h move container to output left
    bindsym $output-mod+Shift+j move container to output down
    bindsym $output-mod+Shift+k move container to output up
    bindsym $output-mod+Shift+l move container to output right

    # $output-mod+shift+cursor keys moves workspace to other outputs
    bindsym $output-mod+Shift+Left  move workspace to output left
    bindsym $output-mod+Shift+Down  move workspace to output down
    bindsym $output-mod+Shift+Up    move workspace to output up
    bindsym $output-mod+Shift+Right move workspace to output right

#
# Workspaces:
#
    # create new numeric workspace
    bindsym $mod+0 exec ~/bin/sway-new-ws.rb

    # move to new numeric workspace
    bindsym $mod+Shift+0 exec ~/bin/sway-move-new-ws.rb

    # switch to workspace
    bindsym $mod+1 workspace 1
    bindsym $mod+2 workspace 2
    bindsym $mod+3 workspace 3
    bindsym $mod+4 workspace 4
    bindsym $mod+5 workspace 5
    bindsym $mod+6 workspace 6
    bindsym $mod+7 workspace 7
    bindsym $mod+8 workspace 8
    bindsym $mod+9 workspace 9
    # move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace 1
    bindsym $mod+Shift+2 move container to workspace 2
    bindsym $mod+Shift+3 move container to workspace 3
    bindsym $mod+Shift+4 move container to workspace 4
    bindsym $mod+Shift+5 move container to workspace 5
    bindsym $mod+Shift+6 move container to workspace 6
    bindsym $mod+Shift+7 move container to workspace 7
    bindsym $mod+Shift+8 move container to workspace 8
    bindsym $mod+Shift+9 move container to workspace 9
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+h or $mod+v, for horizontal and vertical splits
    # respectively.
    # bindsym $mod+h splith
    bindsym $mod+v splitv
    bindsym $mod+Shift+v splith

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

#
# hotkeys:
#
  bindsym control+$alt+l exec ~/bin/screenlock.sway
  bindsym control+$alt+s exec ~/bin/suspend.sway

  # Use xev to find keys:
  bindsym XF86AudioRaiseVolume exec --no-startup-id ~/bin/volup
  bindsym XF86AudioLowerVolume exec --no-startup-id ~/bin/voldown

  # previous/next become volume keys:
  bindsym XF86AudioPrev exec --no-startup-id ~/bin/voldown
  bindsym XF86AudioNext exec --no-startup-id ~/bin/volup

  bindsym XF86AudioMute exec --no-startup-id ~/bin/volmutetoggle

  bindsym XF86Calculator exec ~/bin/calculator
  bindsym XF86Favorites exec ~/bin/screenshot

  bindsym XF86MonBrightnessUp exec brightnessctl s +15%
  bindsym XF86MonBrightnessDown exec brightnessctl s 15%-

#
# Outputs:
#
    # Start i3bar to display a workspace bar (plus the system information
    # i3status finds out, if available)
    bar {
        swaybar_command /usr/bin/swaybar
        status_command /usr/bin/i3status
        position bottom
        # laptop screen
        output eDP-1
    }
    bar {
        swaybar_command /usr/bin/swaybar
        status_command /usr/bin/i3status
        position top
        output DP-1
    }
    bar {
        swaybar_command /usr/bin/swaybar
        status_command /usr/bin/i3status
        position bottom
        output DP-2
    }
    bar {
        swaybar_command /usr/bin/swaybar
        status_command /usr/bin/i3status
        position top
        output DVI-I-1
        #font pango:DejaVu Sans Mono 10
    }
    bar {
        swaybar_command /usr/bin/swaybar
        status_command /usr/bin/i3status
        position bottom
        output HDMI-A-1
    }
