#!/bin/bash

set -euo pipefail

rpm_config_dir="$(dirname "$0")/rpm.d"
source_run=$(which "$HOME"/bin/,source-some-scripts)

packages=()
packages_remove=()

# associative map (dictionary):
declare -A repos
declare -A packages_override
declare -A packages_replace

fedora_version=$(rpm -E %fedora)

function title {
    echo -e "\n=== $1"
}

function subtitle {
    echo "--- $1"
}

title "Parsing configs..."
source "$source_run" "$rpm_config_dir"/*.conf

###############################################################################

title "Installing repositories..."
for repo_filename in "${!repos[@]}"; do
    repo_url=${repos[$repo_filename]}
    output="/etc/yum.repos.d/$repo_filename"
    subtitle "$output from $repo_url"
    sudo curl --progress-bar --location --output "$output" "$repo_url"
done
unset repo_filename repo_url output

title "Removing packages..."
for package in "${packages_remove[@]}"; do
    (
        set -x
        rpm-ostree override remove "${package}"
    ) || true
done
unset package

title "Adding packages..."
if [[ -n "${packages[*]}" ]]; then
    (
        set -x
        rpm-ostree install --idempotent -y "${packages[@]}"
    )
fi

title "Overriding specific packages..."
for remove_package in "${!packages_override[@]}"; do
    add_package=${packages_override[$remove_package]}
    (
        set -x
        rpm-ostree override remove "$remove_package" --install "$add_package"
    ) || true
done
unset remove_package add_package

title "Replacing specific packages..."
if [[ -n "${packages_replace[*]}" ]]; then
    # Build a single command to save time:
    add_remove="rpm-ostree update"
    for remove_package in "${!packages_replace[@]}"; do
        add_package=${packages_replace[$remove_package]}
        add_remove+=" --uninstall $remove_package --install $add_package"
    done
    (
        set -x
        $add_remove
    )
    unset remove_package add_package add_remove
fi

title "Running post install scripts..."
(
  "$source_run" "$rpm_config_dir"/*.post
) || true

echo "Done."
