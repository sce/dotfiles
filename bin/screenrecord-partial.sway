#!/bin/bash

# (e)xit on failure, no (u)nset variables, errors in piped commands are fatal:
set -euo pipefail

function notify {
  msg=$1

  echo "$msg"
  notify-send --transient --expire-time=1000 "$msg" &
}

# fail early:
dir=$(xdg-user-dir VIDEOS)
record_cmd=$(which wf-recorder)
slurp=$(which slurp)

date=$(date +"%Y-%m-%d %H-%M-%S")
file="$dir/${date} recording-partial.mkv"
file_mp4="$dir/$(basename "$file" .mkv).mp4"
file_gif="$dir/$(basename "$file" .mkv).gif"

geometry=$($slurp)
notify "Recording rectangle to $file..."

(
    set -x
    $record_cmd --geometry "$geometry" -f "$file" --codec libx264 "$@" ||
        $record_cmd --geometry "$geometry" -f "$file" "$@"
)

notify "Recording finished: $(basename "$file")"

ffmpeg=$(which ~/bin/,ffmpeg)

# 20240104: mp4 h264 isn't supported by slack, but h264 is
# https://github.com/AvdLee/RocketSimApp/issues/31
(
    set -x
    $ffmpeg -i "$file" -c:a copy -c:v libx264 -filter:v fps=30 "$file_mp4" ||
        $ffmpeg -i "$file" -c copy "$file_mp4"
)

notify "Created \"$(basename "$file_mp4")\""

# convert to gif also, for convenience:
# if we don't force 30fps in the output we might get a really slow gif
# ffmpeg -i "$file" -filter:v fps=fps=30 "$file_gif"
#
# cat "$file_gif" | wl-copy
#
# notify "Also wrote $file_gif"
